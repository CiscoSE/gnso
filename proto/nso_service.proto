syntax = "proto3";
/**
 * @license
 * Copyright (c) 2020 Cisco and/or its affiliates.
 *
 * This software is licensed to you under the terms of the Cisco Sample
 * Code License, Version 1.0 (the "License"). You may obtain a copy of the
 * License at
 *
 *                https://developer.cisco.com/docs/licenses
 *
 * All use of the material herein must be in accordance with the terms of
 * the License. All rights not expressly granted by the License are
 * reserved. Unless required by applicable law or agreed to separately in
 * writing, software distributed under the License is distributed on an "AS
 * IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied.
 */

service NSOService {
    rpc GetDevices (GetDevicesRequest) returns (GetDevicesResponse);
    rpc ExecOperation (ExecOperationRequest) returns (ExecOperationResponse);
    rpc GetConfig (GetConfigRequest) returns (GetConfigResponse);
    rpc EditConfig (EditConfigRequest) returns (EditConfigResponse);
    rpc Query (QueryRequest) returns (QueryResponse);
}

// Common

message Response {
    string result = 1;
}

message Request {
    string token = 1;
}

// Get devices messages
message Device {    
    string name = 1;
    string address = 2;
    DeviceType type = 3;
    string authgroup = 4;
}

message DeviceType {
    string ned_id = 1;
    string ned_type = 2;
}

message GetDevicesRequest {
    Request request = 1;
}

message GetDevicesResponse {
    Response response = 1;
    repeated Device devices = 2;
}

// Exec operation messages
message ExecOperationRequest {
    Request request = 1;
    string path = 2;
    string options = 3;
    string json_data = 4;
}

message ExecOperationResponse {
    Response response = 1;
}

// Get config messages
message GetConfigRequest {
    Request request = 1;
    string path = 2;
    string options = 3;
}

message GetConfigResponse {
    Response response = 1;
}

// Edit config messages
message EditConfigRequest {
    Request request = 1;
    string path = 2;
    string operation_type = 3; // e.g. replace, merge, create
    string options = 4; // e.g. dry-run, commit-queues
    string json_data = 5;
}

message EditConfigResponse {
    Response response = 1;
}

// Query
message QueryRequest {
    Request request = 1;
    string json_query = 2;
}

message QueryResponse {
    Response response = 1;
}